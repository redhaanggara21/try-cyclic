version: '3.8'
services:

  api:
    image: node:10.15.3-alpine
    container_name: tqd-node
    build: .
    ports:
      - 3000:3000
    environment:
     - NODE_ENV=production
     - ES_HOST=elasticsearch
     - NODE_PORT=3000
     - ELASTIC_URL=http://elasticsearch:9200
    volumes:
       - ./:/usr/src/app
    command: npm run start
    links:
        - elasticsearch
    depends_on:
        - elasticsearch
        - postgres
        - redis
    networks: 
      - esnet
  postgres:
    container_name: postgres-typescript-db
    image: postgres:14.0
    volumes:
      # - postgres:/data/postgresql
      - postgres:/var/lib/postgresql/data
    ports:
      - 5430:5432
    env_file:
      - ./.env
    networks:
      - postgres-backend
  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - '6379:6379'
    volumes:
      - redisDB:/data
    networks:
      - postgres-backend
  kibana:
    image: docker.elastic.co/kibana/kibana:7.14.1
    container_name: MY_KIBANA
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    depends_on:
      - elasticsearch
    links:
      - elasticsearch
    networks: 
      - postgres-backend

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.1
    container_name: MY_ELASTICSEARCH
    ports: 
      - 9200:9200
      - 9300:9300
    environment:
      discovery.type: single-node
    volumes:
      - ./esdata/:/usr/share/elasticsearch/data/
    networks:
      - postgres-backend
  logstash:
    build:
      context: logstash/
      # args:
        # ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro,Z
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro,Z
    ports:
      - 5044:5044
      - 50000:50000/tcp
      - 50000:50000/udp
      - 9600:9600
    environment:
      LS_JAVA_OPTS: -Xms256m -Xmx256m
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}
    networks:
      - postgres-backend
    depends_on:
      - elasticsearch
    restart: unless-stopped

volumes:
  postgres:
    name: backend
  redisDB:
  esdata:


networks:
  postgres-backend:
